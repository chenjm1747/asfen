<html>
<head>
<title>ReadMe</title>
<meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<script LANGUAGE="JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
// -->
</script>
</head>
<body BGCOLOR="#FFFFFF" TEXT="#000000">
<table WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="5" BGCOLOR="#660000">
  <tr>
    <td>
      <div ALIGN="CENTER"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="6" COLOR="#FFFFFF"><b>Wave Audio Package v1.85</b></font></div>
    </td>
  </tr>
</table>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Copyright &copy; <a HREF="mailto:kambiz@delphiarea.com">Kambiz R. Khojasteh</a>. All rights reserved.<br>
  Get future package updates from <a HREF="http://www.delphiarea.com">http://www.delphiarea.com</a>.<br>
  </font></p>
<table BORDER="1" CELLSPACING="2" CELLPADDING="5" BORDERCOLOR="#FFFFFF" ALIGN="LEFT">
  <tr BGCOLOR="#333333" ALIGN="CENTER" VALIGN="MIDDLE">
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 3 </b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 4</b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 5</b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 6</b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 7</b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 2005</b></font></td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Delphi 2006</b></font></td>
  </tr>
</table>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
  <br>
  </font></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="4"><b><a NAME="DESCRIPTION"></a><br>
  DESCRIPTION</b></font></p>
<p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio Package provides seven components for playing and recording of wave audio formats, two components for storing wave data as Delphi resources, one audio mixer component, and one high resolution multimedia timer. The package has also a set of useful functions for manipulating wave audio's.</font></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The package's components are:</font></p>
<ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TMultimediaTimer">TMultimediaTimer</a></b><br>
    Is a high resolution timer.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TAudioMixer">TAudioMixer</a></b><br>
    Provides an easy interface to manage audio mixer controls.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TWaveStorage">TWaveStorage</a></b><br>
    Stores a single wave audio and provides access to its informational fields.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TWaveCollection">TWaveCollection</a></b><br>
    Stores a collection of wave audio's as resource and provides access to their informational fields.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TAudioPlayer">TAudioPlayer</a></b><br>
    Plays a wave audio, which is stored in the component.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TAudioRecorder">TAudioRecorder</a></b><br>
    Records wave audio and stores it in the component.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TStockAudioPlayer">TStockAudioPlayer</a></b><br>
    Plays wave audio from a <a HREF="#TWaveStorage">TWaveStorage</a> or <a HREF="#TWaveCollection">TWaveCollection</a> component, a stream, or a file.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TStockAudioRecorder">TStockAudioRecorder</a></b><br>
    Records wave audio to a <a HREF="#TWaveStorage">TWaveStorage</a> or <a HREF="#TWaveCollection">TWaveCollection</a> component, a stream, or a file.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TLiveAudioPlayer">TLiveAudioPlayer</a></b><br>
    Plays wave audio from user defined buffers.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TLiveAudioRecorder">TLiveAudioRecorder</a></b><br>
    Records wave audio to user defined buffers.</font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TAudioRedirector">TAudioRedirector</a></b><br>
    Records wave audio from an input audio device and plays it back on an output audio device.</font></li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="INTERFACE"></a><br>
  <font SIZE="4">INTERFACE</font></b></font></p>
<ul>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Although for using the components available in the Wave Audio package, you do not know to know about the details, however for some low level descriptions I've supposed you are familiar with Microsoft Multimedia terminology and API. To know more about details you can study &quot;Microsoft Multimedia Programmer's Reference&quot;.</font></p>
<ul>
  <ul>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#DataTypes">Data Types</a> </font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#EventTypes">Event Types</a> </font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#ExceptionClasses">Exception Classes</a> </font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#WaveStorageClasses">Wave Storage Classes</a></font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#WaveAudioPlayerRecorderClasses">Wave Audio Player and Recorder Classes</a></font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#AudioMixerClasses">Audio Mixer Classes</a> </font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#TimerClass">Multimedia Timer Class</a></font></li>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#GlobalProcedures">Global Procedures</a><br>
      </font></li>
  </ul>
</ul>
<ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="3"><b><a NAME="DataTypes"></a>DATA TYPES </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPCMChannel"></a>TPCMChannel = (cMono, cStereo)<br>
            </b>Audio channels for PCM format.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPCMSamplesPerSec"></a>TPCMSamplesPerSec = (ss8000Hz, ss11025Hz, ss22050Hz, ss44100Hz, ss48000Hz);<br>
            </b>Samples per soconds for PCM format.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPCMBitsPerSample"></a>TPCMBitsPerSample = (bs8Bit, bs16Bit);<br>
            </b>Bits per sample for PCM format.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPCMFormat"></a>TPCMFormat = (nonePCM, Mono8Bit8000Hz, Stereo8bit8000Hz, Mono16bit8000Hz, Stereo16bit8000Hz, Mono8bit11025Hz, Stereo8bit11025Hz, Mono16bit11025Hz, Stereo16bit11025Hz, Mono8bit22050Hz, Stereo8bit22050Hz, Mono16bit22050Hz, Stereo16bit22050Hz, Mono8bit44100Hz, Stereo8bit44100Hz, Mono16bit44100Hz, Stereo16bit44100Hz, Mono8bit48000Hz, Stereo8bit48000Hz, Mono16bit48000Hz,<br>
            Stereo16bit48000Hz);<br>
            </b>Santandard PCM formats.<br>
            </font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>nonePCM</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">None PCM audio format</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mono8Bit8000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 8.000 kHz, 8 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Stereo8bit8000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> PCM 8.000 kHz, 8 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mono16bit8000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 8.000 kHz, 16 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Stereo16bit8000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 8.000 kHz, 16 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mono8bit11025Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 11.025 kHz, 8 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Stereo8bit11025Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 11.025 kHz, 8 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mono16bit11025Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 11.025 kHz, 16 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo16bit11025Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 11.025 kHz, 16 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono8bit22050Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 22.050 kHz, 8 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo8bit22050Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 22.050 kHz, 8 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono16bit22050Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 22.050 kHz, 16 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo16bit22050Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 22.050 kHz, 16 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono8bit44100Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 44.100 kHz, 8 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo8bit44100Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 44.100 kHz, 8 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono16bit44100Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 44.100 kHz, 16 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo16bit44100Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 44.100 kHz, 16 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono8bit48000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 48.000 kHz, 8 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo8bit48000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 48.000 kHz, 8 Bit, Stereo</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Mono16bit48000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 48.000 kHz, 16 Bit, Mono</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Stereo16bit48000Hz</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 48.000 kHz, 16 Bit, Stereo</font></td>
            </tr>
          </table>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveDeviceFormats"></a>TWaveDeviceFormats = set of <a HREF="#TPCMFormat">TPCMFormat</a>;<br>
            </b>Supported PCM formats by a wave audio device.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveOutDeviceSupport"></a>TWaveOutDeviceSupport = (dsVolume, dsStereoVolume, dsPitch, dsPlaybackRate, dsPosition, dsAsynchronize, dsDirectSound);<br>
            </b>Possible features of a wave out audio device.<br>
            </font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsVolume</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports volume control.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsStereoVolume</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports separate left and right volume control.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsPitch</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> Supports pitch control.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsPlaybackRate</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports playback rate control.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsPosition</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Returns sample-accurate position information.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsAsynchronize</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The driver is asynchronous and will not block the caller thread while playing a buffer.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>dsDirectSound</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports Direct Sound.</font></td>
            </tr>
          </table>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b> <a NAME="TWaveOutDeviceSupports"></a>TWaveOutDeviceSupports = set of <a HREF="#TWaveOutDeviceSupport">TWaveOutDeviceSupport</a>;<br>
            </b>Supported features by a wave out audio device.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveOutOption"></a>TWaveOutOption = (woSetVolume, woSetPitch, woSetPlaybackRate);<br>
            </b>Possible options for a wave out audio device.<br>
            </font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>woSetVolume</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If the wave out audio device supports volume control, the volume should be set by the component.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>woSetPitch</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If the wave out audio device supports pitch control, the pich should be set by the component.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>woSetPlaybackRate</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> If the wave out audio device supports playback rate control, the playback rate should be set by the component.</font></td>
            </tr>
          </table>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveOutOptions"></a>TWaveOutOptions = set of <a HREF="#TWaveOutOption">TWaveOutOption</a>;<br>
            </b>Selected options for a wave out audio device.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveStreamState" id="TWaveStreamState"></a>TWaveStreamState = (wssReady, wssReading, wssWriting);<br>
            </b>Specifies state of a wave stream adapter. <br>
            </font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>wssReady</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The wave stream is ready to use.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>wssReading</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The wave audio is being read.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>wssWriting</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The wave audio is being written.</font></td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMS2StrFormat"></a>TMS2StrFormat = (msHMSh, msHMS, msMSh, msMS, msSh, msS, msAh, msA);</font></b><font SIZE="2"><br>
            Format specifiers for milliseconds to string convertor.</font></font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msHMSh</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Hour:Minute:Second.Hunderdth</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msHMS</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Hour:Minute:Second</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msMSh</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> Minute:Second.Hunderdth</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msMS</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Minute:Second</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msSh</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Second.Hunderdth</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msS</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Second</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msAh</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Automatically chooses the best format with hunderdth of second</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>msA</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Automatically chooses the best format without hunderdth of second</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMixerControlType"></a>TMixerControlType = (mcVolume, mcMute, mcSelect, mcMix);</font></b><font SIZE="2"><br>
            Audio mixer control type.</font></font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcVolume</font></b></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">General volume fade control.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcMute</font></b></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Mutes an audio line (suppressing the data flow of the line) or allows the audio data to play.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcSelect</font></b></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Restricts the line selection to one source line at a time.</font></td>
            </tr>
            <tr>
              <td VALIGN="TOP"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcMix</font></b></td>
              <td>&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Selects the mixer channel.</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMixerControlTypes"></a>TMixerControlTypes = set of <a HREF="#TMixerControlType">TMixerControlType</a>;</font></b><font SIZE="2"><br>
            Set of available audio mixer control types.</font></font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMixerLineTargetType"></a>TMixerLineTargetType = (tgUndefined, tgWaveOut, tgWaveIn, tgMidiOut, tgMidiIn, tgAux);</font></b><font SIZE="2"><br>
            Target media device type associated with the audio line.</font></font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgUndefined</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is not strictly bound to a defined media type.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgWaveOut</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is strictly bound to the waveform-audio output device.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgWaveIn</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is strictly bound to the waveform-audio input device.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgMidiOut</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is strictly bound to the MIDI output device.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgMidiIn</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is strictly bound to the MIDI input device.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tgAux</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The audio line is strictly bound to the auxiliary device.</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMixerLineComponentType"></a>TMixerLineComponentType = (cmDstUndefined, cmDstDigital, cmDstLine, cmDstMonitor, cmDstSpeakers, cmDstHeadphones, cmDstTelephone, cmDstWaveIn, cmDstVoiceIn, cmSrcUndefined, cmSrcDigital, cmSrcLine, cmSrcMicrophone, cmSrcSynthesizer, cmCompactDisc, cmSrcTelephone, cmSrcPCSpeaker, cmSrcWaveOut, cmSrcAuxiliary, cmSrcAnalog);</font></b><font SIZE="2"><br>
            Component type for this audio line. An application can use this information to display tailored graphics or to search for a particular component.</font></font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstUndefined</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a destination that cannot be defined by one of the standard component types. A mixer device is required to use this component type for line component types that have not been defined by Microsoft Corporation.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstDigital</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a digital destination (for example, digital input to a DAT or CD audio device).</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstLine</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a line level destination (for example, line level input from a CD audio device) that will be the final recording source for the analog-to-digital converter (ADC). Because most audio cards for personal computers provide some sort of gain for the recording audio source line, the mixer device will use the <b>cmDstWaveIn</b> type.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstMonitor</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a destination used for a monitor.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstSpeakers</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is an adjustable (gain and/or attenuation) destination intended to drive speakers. This is the typical component type for the audio output of audio cards for personal computers.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstHeadphones</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is an adjustable (gain and/or attenuation) destination intended to drive headphones. Most audio cards use the same audio destination line for speakers and headphones, in which case the mixer device simply uses the <b>cmDstSpeakers</b> type.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstTelephone</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a destination that will be routed to a telephone line.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstWaveIn</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a destination that will be the final recording source for the waveform-audio input (ADC). This line typically provides some sort of gain or attenuation. This is the typical component type for the recording line of most audio cards for personal computers.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmDstVoiceIn</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a destination that will be the final recording source for voice input. This component type is exactly like <b>cmDstWaveIn</b> but is intended specifically for settings used during voice recording/recognition. Support for this line is optional for a mixer device. Many mixer devices provide only <b>cmDstWaveIn</b>.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcUndefined</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source that cannot be defined by one of the standard component types. A mixer device is required to use this component type for line component types that have not been defined by Microsoft Corporation.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcDigital</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a digital source (for example, digital output from a DAT or audio CD).</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcLine</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a line-level source (for example, line-level input from an external stereo) that can be used as an optional recording source. Because most audio cards for personal computers provide some sort of gain for the recording source line, the mixer device will use the <b>cmSrcAuxiliary</b> type.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcMicrophone</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a microphone recording source. Most audio cards for personal computers provide at least two types of recording sources: an auxiliary audio line and microphone input. A microphone audio line typically provides some sort of gain. Audio cards that use a single input for use with a microphone or auxiliary audio line should use the <b>cmSrcMicrophone</b> component type.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcSynthesizer</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from the output of an internal synthesizer. Most audio cards for personal computers provide some sort of MIDI synthesizer (for example, an Adlib&reg;-compatible or OPL/3 FM synthesizer).</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmCompactDisc</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from the output of an internal audio CD. This component type is provided for audio cards that provide an audio source line intended to be connected to an audio CD (or CD-ROM playing an audio CD).</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcTelephone</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from an incoming telephone line.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcPCSpeaker</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from personal computer speaker. Several audio cards for personal computers provide the ability to mix what would typically be played on the internal speaker with the output of an audio card. Some audio cards support the ability to use this output as a recording source.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcWaveOut</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from the waveform-audio output digital-to-analog converter (DAC). Most audio cards for personal computers provide this component type as a source to the <b>cmDstSpeakers</b> destination. Some cards also allow this source to be routed to the <b>cmDstWaveIn</b> destination.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcAuxiliary</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is a source originating from the auxiliary audio line. This line type is intended as a source with gain or attenuation that can be routed to the <b>cmDstSpeakers</b> destination and/or recorded from the <b>cmDstWaveIn</b> destination.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmSrcAnalog</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is an analog source (for example, analog output from a video-cassette tape).</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="TMixerLineFlags"></a>TMixerLineFlags = set of (lfActive, lfDisconnected, lfSource);</font></b><font SIZE="2"><br>
            Status and support flags for the audio line.</font></font></p>
          <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>lfActive</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is active. An active line indicates that a signal is probably passing through the line.</font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>lfDisconnected</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is disconnected. A disconnected line's associated controls can still be modified, but the changes have no effect until the line is connected. </font></td>
            </tr>
            <tr>
              <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>lfSource</b></font></td>
              <td WIDTH="20">&nbsp;</td>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio line is an audio source line associated with a single audio destination line. If this flag is not set, this line is an audio destination line associated with zero or more audio source lines.</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><br>
    </font></b> <br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="EventTypes"></a><b><font SIZE="3">EVENT TYPES </font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TWaveAudioEvent"></a>TWaveAudioEvent = procedure(Sender: TObject) of object;</b><br>
            This event is used for wave audio events that do not require parameters.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b> <a NAME="TWaveAudioGetFormatEvent"></a>TWaveAudioGetFormatEvent = procedure(Sender: TObject; var pWaveFormat: PWaveFormatEx; var FreeIt: Boolean) of object;<br>
            </b>This event is used for wave audio events that get wave audio format from their handler. The handler should set pWaveFormat parameter to the address of a TWaveFormatEx structure. If the FreeIt parameter set to True, the memory allocated for wave format structure will be freed automatically, when it is no more needed.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b> <a NAME="TWaveAudioGetDataEvent"></a>TWaveAudioGetDataEvent = function(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD; var NumLoops: DWORD): DWORD of object;<br>
            </b>This event is used for wave audio events that get the wave audio data for playback. The handler should fill the buffer specified by the Buffer parameter with the wave data. The maximum data that can be written in the buffer is specified by the BufferSize parameter. The handler must return the number of bytes actually written in the buffer. Optionally the handler can determine the number of times the buffer should be played by using the NumLoop parameter.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b> <a NAME="TWaveAudioGetDataPtrEvent"></a>TWaveAudioGetDataPtrEvent = function(Sender: TObject; var Buffer: Pointer; var NumLoops: DWORD; var FreeIt: Boolean): DWORD of object;<br>
            </b>This event is used for wave audio events that get the wave audio data for playback. The handler should set the pointer specified by the Buffer to the address of wave data and return the size of the buffer. If the FreeIt parameter set to True, the component will automatically free the memory allocated for buffer. Optionally the handler can determine the number of times the buffer should be played by using the NumLoop parameter.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TWaveAudioDataReadyEvent"></a>TWaveAudioDataReadyEvent = procedure(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD; var FreeIt: Boolean) of object;<br>
          </b>This event is used for wave audio events that informs the caller about the recorded wave audio data. The wave data stored in buffer specified by the Buffer parameter, and the size of the actual data in the buffer is specified by the BufferSize parameter. If the FreeIt parameter set to True, the component will release the memory allocated for the buffer, otherwise your application must release it. </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TWaveAudioLevelEvent"></a>TWaveAudioLevelEvent = procedure(Sender: TObject; Level: Integer) of object;<br>
          </b>This event is used for wave audio events that informs the caller about the peak level of the audio buffer in percent.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TWaveAudioFilterEvent"></a>TWaveAudioFilterEvent = procedure(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD) of object;<br>
          </b>This event is used for wave audio events that offers to the caller to filter wave data. The wave data stored in the buffer specified by the Buffer parameter, and the size of the actual data in the buffer is specified by the BufferSize parameter. The event handler only can change the data, not the size of the data.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TMixerLineNotifyEvent"></a>TMixerLineNotifyEvent = procedure(Sender: TObject; MixerLine: <a HREF="#TAudioMixerLine">TAudioMixerLine</a>) of object;<br>
          </b>This event notifies the application that the state of an audio line has changed. </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TMixerControlNotifyEvent"></a>TMixerControlNotifyEvent = procedure(Sender: TObject; MixerLine: <a HREF="#TAudioMixerLine">TAudioMixerLine</a>; ControlType: <a HREF="#TMixerControlType">TMixerControlType</a>) of object;<br>
          </b>This event notifies the application that the state of a control associated with an audio line has changed. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><br>
    </font></b> <br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="3"><a NAME="ExceptionClasses"></a>EXCEPTION CLASSES </font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="EWaveAudioError"></a>EWaveAudioError = class(Exception)<br>
          </b>This class is the base exception class for wave audio exceptions.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="EWaveAudioSysError"></a>EWaveAudioSysError = class(<a HREF="#EWaveAudioError">EWaveAudioError</a>)<br>
          </b>This exception is raised if the operating system returns an error code for a wave audio device. The exception dialog contains the system message associated with the error. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="EWaveAudioInvalidOperation"></a>EWaveAudioInvalidOperation = class(<a HREF="#EWaveAudioError">EWaveAudioError</a>)<br>
          </b>This exception is raised if the when a component receives a request for an invalid operation. For example, if an application attempts to open an already open wave audio device, or change its wave format an EWaveAudioInvalidOperation exception is raised.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><br>
    </font></b> <br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="3"><a NAME="WaveStorageClasses"></a>WAVE STORAGE CLASSES</font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveStreamAdapter" id="TWaveStreamAdapter"></a>TWaveStreamAdapter = class(TPersistent);<br>
            </b>This class encapsulates a Delphi stream as a wave audio and provides easy access to its informational fields.</font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties </b></font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>AudioFormat: Strings; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Determines the string description of the wave format.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>BitRate: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the bit rate of the wave audio in kbps (kilo bits per second). </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DataSize: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><b><br>
                </b>Indicates the size of wave data in bytes.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>DataOffset: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the offset of wave data from the begining of the stream.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Empty: Boolean; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates whether the associated stream is empty.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Length: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the lenght of the wave in milliseconds.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Ownership: TStreamOwnership;</b><br>
                Specifies whether the TWaveStreamAdapter should act as the Owner of the associated stream object. TWaveStreamAdaptor frees the owned associated stream from its own destructor.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>PeakLevel: Integer; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><b><br>
                </b>Indicates the peak level of the volume for the wave audio in percent.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the standard PCM format of the wave audio.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: Integer;<br>
                </b>Determines the current wave data offset in bytes while wave data is being read or write. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="State"></a>State: <a href="#TWaveStreamState">TWaveStreamState</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the current state of the wave stream. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Stream: TStream</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Identifies the associated TStream object that TWaveStreamAdapter uses. Read Stream to directly access the TStream object that the wave stream adapter represents. This object is associated with the TStream object in the TWaveStreamAdapter constructor.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Valid: Boolean ; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates whether the wave audio is valid.</font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>WaveFormat: PWaveFormatEx; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Pointer to the wave format structure of the wave audio. Although the fields of wave format structure are not read-only, however you must not change them.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Event</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>OnChanging: TNotifyEvent;</b> <br>
                Occurs just before a change is made to the stream.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>OnChange: TNotifyEvent;</b> <br>
                Occurs when the content of the stream is changed.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method</b></font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure Assign(Source: TPersistent);</b> <br>
                Copies a new wave audio in to the associated stream object.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="BeginRewrite"></a>function BeginRewrite(const pWaveFormat: PWaveFormatEx): Boolean;</b> <br>
                Initiates creating of a new wave audio in the specified format. Use <a href="#write">Write</a> method to write raw wave data, and then call <a href="#EndRewrite">EndRewrite</a> to finalize creating of the new wave audio. Calling this method clears the previous content of the associated stream. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="BeginRewritePCM"></a>function BeginRewritePCM(Format: <a HREF="#TPCMFormat">TPCMFormat</a>): Boolean;</b> <br>
                Initiates creating of a new wave audio in the specified PCM format. Use <a href="#write">Write</a> method to write raw wave data, and then call <a href="#EndRewrite">EndRewrite</a> to finalize creating of the new wave audio. Calling this method clears the previous content of the associated stream. </font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function ChangeVolume(Percent: Integer): Boolean;</b><br>
                Increases or decreases the volume of the wave audio by the specified percentage (PCM format only).</font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure Clear;</b><br>
                Sets size of the associated stream to zero.</font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>constrator Create(AStream: TStream; AOwnership: TStreamOwnership);<br>
                </strong>Creates an instance of a TWaveStreamAdapter object. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><font COLOR="#FF0000"><b> </b></font><b>function ConvertTo(const pTargetWaveFormat: PWaveFormatEx): Boolean;</b> <br>
                Converts the wave audio to the specified format. If the function succeeds to convert the wave, it returns True, otherwise it returns False. For more information, please read <a HREF="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_multistep_format_conversion.asp">Multistep Format Conversion</a> on MSDN.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><font COLOR="#FF0000"><b> </b></font><b>function ConvertToPCM(TargetFormat: <a HREF="#TPCMFormat">TPCMFormat</a>): Boolean;</b> <br>
                Converts the wave audio to the specified PCM format. If the function succeeds to convert the wave, it returns True, otherwise it returns False.</font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">procedure Crop;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If the stream size is more than the actual wave audio size, this method truncates the size to the actual size.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Delete(Pos: DWORD; Len: DWORD): Boolean;</b><br>
                Deletes a portion of the wave audio from the position specified by the Pos parameter in milliseconds, and by the length specified by the Len parameter in milliseconds.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="EndRead" id="EndRead"></a>function EndRead: Boolean;</b> <br>
                Finalizes reading of raw wave audio data.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="EndRewrite" id="EndRewrite"></a>function EndRewrite: Boolean;</b> <br>
                Finalizes creation of a new wave audio.</font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Equals(</b><b>Wave: <a HREF="#twAVE">TWave</a>): Boolean;</b><br>
                Returns True if the content of the wave object specified by the Wave parameter equals to this object.</font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function Insert(Pos: DWORD; Wave: <a HREF="#twAVE">TWave</a>): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Inserts another wave audio specified by the Wave parameter at the position specified by the Pos parameter in milliseconds. The audio format of the waves should be identical.</font></td>
            </tr>
            <tr>
              <td>
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function InsertSilence(Pos: DWORD; Len: DWORD): Boolean;</b><br>
                  Inserts silence at the position specified by the Pos parameter in milliseconds, and by the duration specified by the Len parameter in milliseconds. The audio format of the wave should be PCM format.</font> </p>
              </td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Invert: Boolean;</b><br>
                Inverts the wave audio (PCM format only).</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure LoadFromFile(const AFileName: String);</b><br>
                Copies content of the specified file in to the assiociated stream.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure LoadFromStream(AStream: TStream);</b><br>
                Copies content of the specified stream in to the assiociated stream.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="Write"></a>function Read(const Buffer: Pointer; Count: Integer): Integer;</b><br>
                Reads raw wave data from the wave audio. The reading process should be initialized by calling <a href="#beginRead">BeginRead</a> method. </font></td>
            </tr>
            <tr>
              <td>
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function SameFormat(Wave: <a HREF="#twAVE">TWave</a>): Boolean;<br>
                  </b>Returns True if the audio format of the wave object specified by the Wave parameter equals to this object.</font></p>
              </td>
            </tr>
            <tr>
              <td>
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function SameWaveFormat(const pWaveFormat: PWaveFormatEx): Boolean;<br>
                  </b>Returns True if the associated wave audio has the same format of the specified wave format.</font></p>
              </td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SaveToFile(const AFileName: String);</b><br>
                Copies content of the assiociated stream in to the specified file.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SaveToStream(AStream: TStream);</b><br>
                Copies content of the assiociated stream in to the specified stream.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="Write"></a>function Write(const Buffer: Pointer; Count: Integer): Integer;</b><br>
                Appends raw wave data to the end of the wave audio initialized by calling <a href="#beginRewrite">BeginRewrite</a> or <a href="#beginRewritePCM">BeginRewritePCM</a> method. </font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
</b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveStreamConverter" id="TWaveStreamConverter"></a>TWaveStreamConverter = class(<a HREF="#TWaveStreamAdapter">TWaveStreamAdapter</a>);<br>
            </b>This class like its ancestor encapsulates a Delphi stream as a wave audio and provides easy access to its informational fields. In addition, this class can convert wave audio format while reading/writing buffers on the fly.</font></p>
          <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif" color="#FF0000"><strong>Warning:</strong> While reading data, depends on the source and target wave formats, and size of the buffer, the actual read bytes can be less than the requested size (even zero). In this case it means that the conversion of the whole amount of bytes was impossible. However, the class will cache the left bytes and includes them on the next calls. This situation also may occur while writing buffers. But the write function writes the left bytes in an internal cache, and if there is no error, the return value of write metod is equal to the provided buffer size.</font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties </b></font></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="BufferFormat"></a>BufferFormat: PWaveFormatEx; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Determines the the wave format of read/write buffers.</font></td>
            </tr>
          </table>
          <p>&nbsp;</p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method</b></font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>function CanRead: Boolean;</strong><br>
                Returns True if the accosiated wave stream can be converted to the wave format specified by the <a href="#BufferFormat">BufferFormat</a> property. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>function CanRewrite(pWaveFormat: PWaveFormatEx): Boolean;</strong><br>
                Returns True if the wave format specified by the <a href="#BufferFormat">BufferFormat</a> property can be converted to the specified wave format. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>function CanRewritePCM(Format: <a href="#TPCMFormat">TPCMFormat</a>): Boolean;</strong><br>
                Returns True if the wave format specified by the <a href="#BufferFormat">BufferFormat</a> property can be converted to the specified PCM wave format. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SetBufferFormat (const pWaveFormat: PWaveFormatEx);</b> <br>
                Selects the desired wave format for read/write buffers.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SetBufferFormatPCM(Format: <a HREF="#TPCMFormat">TPCMFormat</a>);</b> <br>
                Selects the desired wave format for read/write buffers as a PCM format. </font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWave" id="TWave"></a>TWave = class(<a HREF="#TWaveStreamAdapter">TWaveStreamAdapter</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This object implements a wave audio in memory.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method </b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>constructor Create;</b><br>
                Creates an instance of a TWave object.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveFile" id="TWaveFile"></a>TWaveFile = class(<a HREF="#TWaveStreamAdapter">TWaveStreamAdapter</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This object implements a wave audio in a file.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method </b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>constructor Create(const FileName: String; Mode: Word);</b><br>
                Creates an instance of a TWaveFile object. The parameters are indentical to TFileStream constructor. </font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveConverter" id="TWaveConverter"></a>TWaveConverter = class(<a HREF="#TWaveStreamConverter">TWaveStreamConverter</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                <font SIZE="2">This object implements a wave audio in memory for format conversion purpose.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method </b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>constructor Create;</b><br>
            Creates an instance of a TWaveConverter object.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p>     
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveFileConverter" id="TWaveFileConverter"></a>TWaveFileConverter = class(<a HREF="#TWaveStreamConverter">TWaveStreamConverter</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                <font SIZE="2">This object implements a wave audio in a file for format conversion purpose.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method </b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>constructor Create(const FileName: String; Mode: Word);</b><br>
            Creates an instance of a TWaveFileConverter object. The parameters are indentical to TFileStream constructor. </font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p>     
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TCustomWaveStorage"></a>TCustomWaveStorage = class(TComponent);</b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup> (Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>This class is the base class for wave storage classes.</font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Property</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b> property WaveStream[Index: Integer]: TStream; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Returns the wave stream associated to the spcified index.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Equals(Another: TCustomWaveStorage): Boolean;<br>
                </b>Returns True if the content of the another wave storage object specified by the Another parameter equals to this object.</font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveStorage"></a>TWaveStorage = class(<a HREF="#TCustomWaveStorage">TCustomWaveStorage</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This components stores one single wave audio.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Property</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>Wave: <a HREF="#TWave">TWave</a>;</b><br>
                Specifies the wave audio data.</font></td>
            </tr>
          </table>
          <p></p>
          <p>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveCollection"></a>TWaveCollection = class(<a HREF="#TCustomWaveStorage">TCustomWaveStorage</a>);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This components stores multiple wave audio's.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Property</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>Waves: <a HREF="#TWaveItems">TWaveItems</a>;</b><br>
                The collection of wave audio data.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>function ExportWaveNames(const List: TStrings): Integer;</b><br>
                Fills the list with the name of wave audio's stored in the component, and returns the number of added items to the list.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function IndexOfName(const AName: String): Integer;</b><br>
                Returns the index of the wave audio in the collection by its name.</font></td>
            </tr>
          </table>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveItems"></a>TWaveItems = class(TCollection);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This class is a collection of wave audio data.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Property</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>property Items[Index: Integer]: <a HREF="#TWaveItem">TWaveItem</a>; </b><font COLOR="#990000"><sup>(Default)</sup></font><br>
                Determines the collection items.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>function Add: <a HREF="#TWaveItem">TWaveItem</a>;</b><br>
                Adds a new item to the collection, and returns the item.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Insert(Index: Integer): <a HREF="#TWaveItem">TWaveItem</a>;</b><br>
                Inserts a new item to the collection at the specified index, and returns the item.</font></td>
            </tr>
          </table>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveItem"></a>TWaveItem = class(TCollectionItem);</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
            <font SIZE="2">This class reperesents an item of wave audio collection.</font></font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>Wave: <a HREF="#TWave">TWave</a>;</b><br>
                Specifies the wave audio data.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Name: String; </b><br>
                Stores the name of the item.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Tag: Integer;</b> <br>
                Stores an integer value as part of the item. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b>function Add: <a HREF="#TWaveItem">TWaveItem</a>;</b><br>
                Adds a new item to the collection, and returns the item.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function Insert(Index: Integer): <a HREF="#TWaveItem">TWaveItem</a>;</b><br>
                Inserts a new item to the collection at the specified index, and returns the item.</font></td>
            </tr>
          </table>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><br>
    </font></b> <br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="3"><a NAME="WaveAudioPlayerRecorderClasses"></a>WAVE AUDIO PLAYER AND RECORDER CLASSES<br>
    </font></b><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveAudioIO"></a>TWaveAudioIO = class(TComponent);</b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup> (Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>The base abstract class for both wave audio player and recorder components.</font></p>
          <p></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>function Query(pWaveFormat: PWaveFormatEx): Boolean;<br>
                </b>Returns true if the device supports the wave format specified by the pWaveFormat parameter.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function QueryPCM(PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>): Boolean; </b><br>
                Returns true if the device supports the PCM wave format specified by the PCMFormat parameter.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><a NAME="WaitForStart"></a>procedure WaitForStart;</font></b><font SIZE="2"><br>
                Blockes the caller thread until the audio device starts its operation. </font></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2">procedure WaitForStop;</font></b><font SIZE="2"><br>
                Blockes the caller thread until the audio device completes its operation and stops.</font></font></td>
            </tr>
          </table>
          <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
          </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveAudioOut"></a>TWaveAudioOut = class(<a HREF="#TWaveAudioIO">TWaveAudioIO</a>);</b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup> (Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>The base abstract class for wave audio player components.</font></p>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TWaveAudioIn"></a>TWaveAudioIn = class(<a HREF="#TWaveAudioIO">TWaveAudioIO</a>);</b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup> (Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>The base abstract class for wave audio recorder components.</font></p>
          <p></p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TAudioPlayer"></a>TAudioPlayer = class(<a HREF="#TWaveAudioOut">TWaveAudioOut</a>);<br>
            </b>This component stores a wave audio and plays it on the specified wave audio output device.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio output device will be opened, and audio playback starts.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio output device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio output device capable of playing the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio output device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceSupports: <a HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the supported features by the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio output devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Options: <a HREF="#TWaveOutOptions">TWaveOutOptions</a>;<br>
                </b>Determines whether the component should initialize volume, pitch, and playback rate of the opened wave out audio device with their respective properties.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD;</b><br>
                Indicates the current position of playing audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, audio playback on the opened wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Pitch: Double;<br>
                </b>Specifies the pitch for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>PlaybackRate: Double;<br>
                </b>Specifies the playback rate for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Volume: WORD; <br>
                </b>Specifies the volume in percent for the both left and right channels of the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a name="VolumeLeft"></a>VolumeLeft: WORD; <br>
                </b>Specifies the volume in percent for the left channel of the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a name="VolumeRight"></a>VolumeRight: WORD; <br>
                </b>Specifies the volume in percent for the right channel of the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Wave: <a HREF="#TWaveStreamAdapter">TWaveStreamAdapter</a>;<br>
                </b>Stores the wave audio that will be played.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just before the wave data buffer sends to the audio device. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
          </table>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TStockAudioPlayer"></a>TStockAudioPlayer = class(<a HREF="#TWaveAudioOut">TWaveAudioOut</a>);<br>
            </b>This component plays a wave audio from a file, stream, resource, or a <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a> on the specified wave audio output device.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio output device will be opened, and audio playback starts. The component gets the wave audio that will be played from the <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a> component specified by the <a HREF="#OutStock">Stock</a> property.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio output device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio output device capable of playing the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio output device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceSupports: <a HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the supported features by the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio output devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Options: <a HREF="#TWaveOutOptions">TWaveOutOptions</a>;<br>
                </b>Determines whether the component should initialize volume, pitch, and playback rate of the opened wave out audio device with their respective properties.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD;</b><br>
                Indicates the current position of playing audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, playback on the opened wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Pitch: Double;<br>
                </b>Specifies the pitch for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>PlaybackRate: Double;<br>
                </b>Specifies the playback rate for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OutStock"></a>Stock: <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a>;<br>
                </b>Specfies the wave storage that shoud be used as source of data for the component.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Volume: WORD; <br>
                </b>Specifies the volume in percent for both left and right channels of the opened wave audio output device. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just before the wave data buffer sends to the audio device. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> function PlayStream(AStream: TStream): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays the wave audio stored in the stream specified by the AStream parameter. The function returns True on success, otherwise it returns false.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function PlayFile(const FileName: String): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays the wave audio file specified by the FileName parameter. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function PlayResName(Instance: THandle; const ResName: String): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays the wave audio stored as a resource in the module specified by the Instance parameter, and with the resource name specified by ResName parameter. The function returns True on success, otherwise it returns false.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function PlayResID(Instance: THandle; ResID: Integer): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays the wave audio stored as a resource in the module specified by the Instance parameter, and with the resource ID specified by ResID parameter. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function PlayStock(Index: Integer): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays the wave audio stored in the <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a> specified by the <a HREF="#OutStock">Stock</a> property. If the component assigned to the <a HREF="#OutStock">Stock</a> property is a multi-storage component, the Index parameter specifies the storage's index, otherwise the parameter will be ignored. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function Stop: Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Stops the current playback. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
          </table>
          <p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TLiveAudioPlayer"></a>TLiveAudioPlayer = class(<a HREF="#TWaveAudioOut">TWaveAudioOut</a>);</b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>This component plays wave audio from a user defined buffer on the specified wave audio output device.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio output device will be opened, and audio playback starts.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="OutBufferInternally"></a>BufferInternally: Boolean;<br>
                </b>If this property is True, the component allocates the memory required for the audio buffers and generates <a HREF="#OutOnData">OnData</a> events to fill them. If this property is False, the component generates <a HREF="#OutOnDataPtr">OnDataPtr</a> events to get audio buffers provided by the application.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio output device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio output device capable of playing the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio output device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceSupports: <a HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the supported features by the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio output devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Options: <a HREF="#TWaveOutOptions">TWaveOutOptions</a>;<br>
                </b>Determines whether the component should initialize volume, pitch, and playback rate of the opened wave out audio device with their respective properties.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OutPCMFormat"></a>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
                Specifies the format of wave audio, which is going to be supplied to the component. If this property set to <a HREF="#TPCMFormat">nonePCM</a>, the component generates one <a HREF="#OutOnFormat">OnFormat</a> event to get the wave audio format. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the current position of playing audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, audio playback on the opened wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Pitch: Double;<br>
                </b>Specifies the pitch for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>PlaybackRate: Double;<br>
                </b>Specifies the playback rate for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Volume: WORD; <br>
                </b>Specifies the volume in percent for both left and right channels of the opened wave audio output device. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio output device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just before the wave data buffer sends to the audio device. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <a NAME="OutOnFormat"></a><b>OnFormat: <a HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</a>;</b><br>
                Occurs when the <a HREF="#OutPCMFormat">PCMFormat</a> property set to <a HREF="#TPCMFormat">nonePCM</a> and component needs to know about the format of the wave audio data.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="OutOnData"></a><b>OnData: <a HREF="#TWaveAudioGetDataEvent">TWaveAudioGetDataEvent</a>;</b><br>
                Occurs when the <a HREF="#OutBufferInternally">BufferInternally</a> property set to True and component needs an audio data buffer to be filled. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="OutOnDataPtr"></a><b>OnDataPtr: <a HREF="#TWaveAudioGetDataPtrEvent">TWaveAudioGetDataPtrEvent</a>;</b><br>
                Occurs when the <a HREF="#OutBufferInternally">BufferInternally</a> property set to False and component needs an audio data buffer. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <a NAME="BreakLoop"></a>function BreakLoop: Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Breaks a loop on the given audio output device and allows playback to continue with the next buffer. The function returns True on success, otherwise returns false.</font></td>
            </tr>
          </table>
          <p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TAudioRecorder"></a>TAudioRecorder = class(<a HREF="#TWaveAudioIn">TWaveAudioIn</a>);<br>
            </b>This component records audio from the specified wave audio input device, and stores it as one of its properties.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio input device will be opened, and audio recording starts.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio input device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio input device capable of recording with the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio input device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio input device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio input devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="In1PCMFormat"></a>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
                Specifies the format of wave audio, which is going to be recorded. If this property set to <a HREF="#TPCMFormat">nonePCM</a>, the component generates one <a HREF="#In1OnFormat">OnFormat</a> event to get the wave audio format. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the current position of recorded audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, audio recording on the opened wave audio input device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Wave: <a HREF="#TWaveStreamAdapter">TWaveStreamAdapter</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Stores the recorded wave audio.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just after the audio device is filled a data buffer. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="In1OnFormat"></a><b>OnFormat: <a HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</a>;</b><br>
                Occurs when the <a HREF="#In1PCMFormat">PCMFormat</a> property set to <a HREF="#TPCMFormat">nonePCM</a> and component needs to know about the format of the wave audio, which is going to be recorded.</font></td>
            </tr>
          </table>
          <p>
          <p> 
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TStockAudioRecorder"></a>TStockAudioRecorder = class(<a HREF="#TWaveAudioIn">TWaveAudioIn</a>);<br>
            </b>This component records audio from the specified wave audio input device, and saves in a file, stream, or a <a HREF="#TCustomWaveStorage">TCustomWaveStorage.</a></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio input device will be opened, and audio recording starts. The recorded wave audio will be stored in the <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a> component specified by the <a HREF="#InStock">Stock</a> property.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio input device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio input device capable of recording with the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio input device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio input device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio input devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="In2PCMFormat"></a>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
                Specifies the format of wave audio, which is going to be recorded. If this property set to <a HREF="#TPCMFormat">nonePCM</a>, the component generates one <a HREF="#In2OnFormat">OnFormat</a> event to get the wave audio format. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the current position of recorded audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, audio recording on the opened wave audio input device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="InStock"></a>Stock: <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a>;</b><br>
                Specfies the wave storage that recorded data will be saved in.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just after the audio device is filled a data buffer. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="In2OnFormat"></a><b>OnFormat: <a HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</a>;</b><br>
                Occurs when the <a HREF="#In2PCMFormat">PCMFormat</a> property set to <a HREF="#TPCMFormat">nonePCM</a> and component needs to know about the format of the wave audio, which is going to be recorded.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Methods</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> function RecordToStream(AStream: TStream): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Records wave audio to the stream specified by the AStream parameter. The function returns True on success, otherwise it returns false.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function RecordToFile(const FileName: String): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Records the wave audio to the file specified by the FileName parameter. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function RecordToStock(Index: Integer): Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Recordsthe wave audio to the <a HREF="#TCustomWaveStorage">TCustomWaveStorage</a> component specified bt the <a HREF="#InStock">Stock</a> property. If the component assigned to the <a HREF="#InStock">Stock</a> property is a multi-storage component, the Index parameter specifies the storage's index, otherwise the parameter will be ignored. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function Stop: Boolean;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Stops the current recording. The function returns True on success, otherwise it returns false. </font></td>
            </tr>
          </table>
          <p>&nbsp;</p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TLiveAudioRecorder"></a>TLiveAudioRecorder = class(<a HREF="#TWaveAudioIn">TWaveAudioIn</a>);</b></font><br>
            <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">This component records audio from the specified wave audio input device, and give it to the application as data buffers.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the wave audio input device will be opened, and audio recording starts.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio input device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio input device capable of recording with the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio input device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio input device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio input devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="In3PCMFormat"></a>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
                Specifies the format of wave audio, which is going to be recorded. If this property set to <a HREF="#TPCMFormat">nonePCM</a>, the component generates one <a HREF="#In3OnFormat">OnFormat</a> event to get the wave audio format. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Position: DWORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the current position of recorded audio in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Paused: Boolean;<br>
                </b>When set to True, audio recording on the opened wave audio input device is paused.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is opened.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is closed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnPause: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is paused.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnResume: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the wave audio input device is resumed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just after the audio device is filled a data buffer. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="In3OnFormat"></a><b>OnFormat: <a HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</a>;</b><br>
                Occurs when the <a HREF="#In3PCMFormat">PCMFormat</a> property set to <a HREF="#TPCMFormat">nonePCM</a> and component needs to know about the format of the wave audio, which is going to be recorded.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>OnData: <a HREF="#TWaveAudioDataReadyEvent">TWaveAudioDataReadyEvent</a>;</b><br>
                Occurs when a data buffer is filled. </font></td>
            </tr>
          </table>
          <p>&nbsp;</p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TAudioRedirector"></a>TAudioRedirector = class(TComponent);<br>
            </b>This component records wave audio from an input audio device and plays it on an output audio device.</font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Active: Boolean;<br>
                </b>When set to True, the component starts recording from the audio input device specified by the <a HREF="#AudioIn">AudioIn</a> property, and plays in on audio autput device specified by <a HREF="#AudioOut">AudioOut</a> property.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Async: Boolean;<br>
                </b>Indicates whether the audio events occur in a separate thread.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferCount: WORD;<br>
                </b>Determines the number of data buffers.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>BufferLength: WORD; <br>
                </b>Determines the size of each data buffer in milliseconds.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the last system error code. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>LastErrorText: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Contains the description of the last system error.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a name="TAudioRedirectorStream"></a>Stream: TStream;<br>
                </b>Indicates the stream that the recorded audio should be stored into. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><a NAME="AudioIn"></a><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">AudioIn: <a HREF="#TAudioInput">TAudioInput</a>;</font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                Represents the wave audio input device.<br>
                Note: On Delphi 3, 4, and 5 the sub members of this property are not available at design time.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><a NAME="AudioOut"></a><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>AudioOut: <a HREF="#TAudioOutput">TAudioOutput</a>;<br>
                </b>Represent the wave audio output device.<br>
                Note: On Delphi 3, 4, and 5 the sub members of this property are not available at design time. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnActivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the audio recording and playback is started.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnDeactivate: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;<br>
                </b>Occurs when the audio recording and playback is stopped.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnError: <a HREF="#TWaveAudioEvent">TWaveAudioEvent</a>;</b><br>
                Occurs when a system error is encountered. When this property is not assigned and a system error occurs, the component raises an <a HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</a> exception.</font></td>
            </tr>
          </table>
          <p>&nbsp;</p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TAudioIn"></a>TAudioIn = class(<a HREF="#TWaveAudioIn">TWaveAudioIn</a>);</b></font><br>
            <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">This class represents and manages the audio inpiut device of the <a HREF="#TAudioRedirector">TAudioRedirector</a> component.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio input device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio input device capable of recording with the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio input device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio input device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio input devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="In4PCMFormat"></a>PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
                Specifies the format of wave audio, which is going to be recorded. If this property set to <a HREF="#TPCMFormat">nonePCM</a>, the component generates one <a HREF="#In4OnFormat">OnFormat</a> event to get the wave audio format. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just after the audio input device is filled a data buffer. The event notifies the volume peak level of the data buffer, so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="In4OnFormat"></a><b>OnFormat: TWaveAudioGetFormatEvent;</b><br>
                Occurs when the <a HREF="#In4PCMFormat">PCMFormat</a> property set to <a HREF="#TPCMFormat">nonePCM</a> and component needs to know about the format of the wave audio, which is going to be recorded.</font></td>
            </tr>
          </table>
          <p>&nbsp;</p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TAudioOutput"></a>TAudioOut = class(<a HREF="#TWaveAudioOut">TWaveAudioOut</a>);<br>
            </b>This class represents and manages the audio output device of the <a HREF="#TAudioRedirector">TAudioRedirector</a> component.<b><br>
            </b></font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceID: DWORD;<br>
                </b>Specifies the identifier of wave audio output device. You can use WAVE_MAPPER (default value) instead of a device identifier. In this case, the component seleects a wave audio output device capable of playing the specified wave format.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceFormats: <a HREF="#TWaveDeviceFormats">TWaveDeviceFormats</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates wave audio formats, which the selected wave audio output device supports.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceName: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the freindly name of the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>DeviceSupports: <a HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the supported features by the selected wave audio output device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>NumDevs: DWORD</b><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates the number of available wave audio output devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Options: <a HREF="#TWaveOutOptions">TWaveOutOptions</a>;<br>
                </b>Determines whether the component should initialize volume, pitch, and playback rate of the opened wave out audio device with their respective properties.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Pitch: Double;<br>
                </b>Specifies the pitch for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>PlaybackRate: Double;<br>
                </b>Specifies the playback rate for the opened wave audio output device. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Volume: WORD; <br>
                </b>Specifies the volume in percent for both left and right channels of the opened wave audio output device. </font></td>
            </tr>
          </table>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Events</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLevel: <a HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</a>;</b><br>
                If the audio format is a PCM format, this event occurs just before a data buffer sends to the audio output device. The event notifies the volume peak level of the data buffer (after applying a filter if any), so a smaller buffer length provides a more accurate notification mechanism.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="OnFilter"></a>OnFilter: <a HREF="#TWaveAudioFilterEvent">TWaveAudioFilterEvent</a>;</b><br>
                Occurs just before the wave data buffer sends to the audio device. The event handler may change the buffer's content, however it might not change the size of the buffer.</font></td>
            </tr>
          </table>
          <p> 
        </td>
      </tr>
    </table>
    <br>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="3"><a NAME="AudioMixerClasses"></a>AUDIO MIXER CLASSES</font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TAudioMixer"></a>TAudioMixer = class(TComponent);<br>
            </b>This component provides an interface to manage audio mixer lines and their associated controls.<br>
            </font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="DestinationCount"></a>DestinationCount: WORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates the number of audio line destinations available through the currently selected audio mixer device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>DestinationID: DWORD;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the currently selected destination line index. This member ranges from zero to one less than the value specified in the <a HREF="#DestinationCount">DestinationCount</a> member.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>DestinationName: String;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines the name of the currently selected destination line.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Handle: THandle; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines the handle of the currently selected audio mixer device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains the last system error code for the audio mixer device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2">
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LineCount"></a>LineCount: WORD ; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                  <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the number audio line sources that are associated with the the currently selected destination line.</font></p>
              </td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Lines[LineID: DWORD]: <a HREF="#TAudioMixerLine">TAudioMixerLine</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Provides access to states and controls of the audio line sources that are associated with the the currently selected destination line. The LineID ranges from zero to one less than the value specified in the <a HREF="#LineCount">LineCount</a> member.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="MixerMasterLine"></a>Master: <a HREF="#TAudioMixerLine">TAudioMixerLine</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Provides acces to states and controls of the currently selected audio destination line. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>MixerCaps: TMixerCaps; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the record that describes the capabilities of the currently selected mixer device.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="MixerCount"></a>MixerCount: WORD; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates the number of available mixer devices.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>MixerID: DWORD;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the currently selected mixer device. This member ranges from zero to one less than the value specified in the <a HREF="#MixerCount">MixerCount</a> member.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>MixerName: String;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines the name of the currently selected mixer device..</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Event</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnLineChange: <a HREF="#TMixerLineNotifyEvent">TMixerLineNotifyEvent</a>;<br>
                </b>Occurs when the state of an audio line has changed.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>OnControlChange: <a HREF="#TMixerControlNotifyEvent">TMixerControlNotifyEvent</a>;</b><br>
                Occurs when the state of a control associated with an audio line has changed.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b> function FetchMixerNames(const Names: TStrings): DWORD;<br>
                </b>Adds the name of available audio mixers to the list specified by the Names parameter. The method returns the number of list that are added to the list.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>function FetchDestinationNames(const Names: TStrings): DWORD;<br>
                </b>Adds the name of available destinations for the currently selected audio mixer to the list specified by the Names parameter. The method returns the number of list that are added to the list.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function FindMixerLine(ComponentType: <a HREF="#TMixerLineComponentType">TMixerLineComponentType</a>; out ADestinationID, ALineID: Integer): Boolean;<br>
                </b>Searches through audio lines of all destinations available for the currently select audio mixer to find an audio line, which maches to the specified component type.</font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TAudioMixerLine"></a>TAudioMixerLine = class(TObject);<br>
            </b>This class encapsulates controls and information associated with an audio line.<br>
            </font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>AvailableControls: <a HREF="#TMixerControlTypes">TMixerControlTypes</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates the controls that are available through the audio line.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ComponentType: <a HREF="#TMixerLineComponentType">TMixerLineComponentType</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the component type for this audio line..</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Flags: <a HREF="#TMixerLineFlags">TMixerLineFlags</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines the s</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">tatus and support flags for the audio line</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2">
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ID: Integer; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                  <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates the index of the audio line.</font></p>
              </td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>LastError: MMRESULT; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains the last system error code for the audio line.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mixer: <a HREF="#TAudioMixer">TAudioMixer</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the mixer device of the audio line.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Mute: Boolean;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates whether the line output is mute.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Name: String; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines the name of the audio line.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>SelectedLine: Integer;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">For a destination audio line (<a HREF="#MixerMasterLine">Master</a>), indicates which source audio line is selected for recording.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>TargetType: <a HREF="#TMixerLineTargetType">TMixerLineTargetType</a>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the target media device type associated with the audio line..</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Volume: Integer;</b></font><br>
                <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines volume level of the audio line in precent.</font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b> </font> <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="3"><a NAME="TimerClass"></a>MULTIMEDIA TIMER CLASS</font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TMultimediaTimer"></a>TMultimediaTimer = class(TComponent);<br>
            </b>This component is a wrapper to the Windows' Multimedia Timer, which is a high resolution thread base timer.<br>
            </font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Properties</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Enabled: Boolean;<br>
                </b>Controls whether the timer generates OnTimer events periodically.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Interval: WORD; </b><br>
                Determines the amount of time, in milliseconds, that passes before the component initiates another OnTimer event.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2">Resolution: WORD;</font></b><font SIZE="2"><br>
                Specifies the minimum timer resolution, in milliseconds. For example, if you specify a resolution of 5 and an interval of 100, the timer services </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">generates OnTimer event</font><font SIZE="2"> after an interval ranging from 95 to 105 milliseconds.</font></font></td>
            </tr>
            <tr>
              <td COLSPAN="2">
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>TimerID: Integer</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>; </b><font COLOR="#990000"><sup>(Read-Only)</sup></font></font><br>
                  <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates the timer identifier when it is active, otherwise it is zero.</font></p>
              </td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Event</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>OnTimer: TNotifyEvent;<br>
                </b>Occurs when a specified amount of time, determined by the Interval property, has passed.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><b>Key Method</b></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>class function TimerCaps: TTimeCaps;<br>
                </b>Returns capabilities of the Windows' Multimedia Timer, which are the minimum and maximum supported resolution for the timer.</font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2"><br>
    </font></b><br>
    </font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="GlobalProcedures"></a><b><font SIZE="3">GLOBAL PROCEDURES </font><font SIZE="2"><br>
    <br>
    </font></b> </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetWaveAudioInfo(mmIO: HMMIO; out pWaveFormat: PWaveFormatEx; var DataSize, DataOffset: DWORD): Boolean;<br>
            </b>Retrieves format, size, and offset of the wave audio for an open mmIO handle. On success when the the function returns true, it is the caller responsibility to free the memory allocated for the Wave Format structure via FreeMem procedure.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function CreateWaveAudio(mmIO: HMMIO; const pWaveFormat: PWaveFormatEx; out ckRIFF, ckData: TMMCKInfo): Boolean;</b><br>
          Initializes a wave RIFF format in an open mmIO handle. The previous content of the mmIO will be lost.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure CloseWaveAudio(mmIO: HMMIO; var ckRIFF, ckData: TMMCKInfo);</b><br>
          Updates the chunks and closes an mmIO handle;</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetStreamWaveAudioInfo(Stream: TStream; out pWaveFormat: PWaveFormatEx; out DataSize, DataOffset: DWORD): Boolean;<br>
            </b>Retrieves format, size, and offset of the wave audio for a stream. On success when the the function returns true, it is the caller responsibility to free the memory allocated for the Wave Format structure by <strong>FreeMem</strong> procedure.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function CreateStreamWaveAudio(Stream: TStream; const pWaveFormat: PWaveFormatEx; out ckRIFF, ckData: TMMCKInfo): HMMIO;<br>
            </b>Initializes wave RIFF format in a stream and returns the mmIO handle. After calling this function, the previous content of the stream will be lost.</font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function OpenStreamWaveAudio(Stream: TStream): HMMIO ;<br>
            </b>Opens wave RIFF format in a stream for read and write operations and returns the mmIO handle.</font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CalcWaveBufferSize"></a>function CalcWaveBufferSize(const pWaveFormat: PWaveFormatEx; Duration: DWORD): DWORD;</b><br>
          Returns the number of bytes required to store wave data for the specified wave format and duration in milliseconds.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetAudioFormat(FormatTag: Word): String;</b><br>
          Returns the string representation of the wave form format ID.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetWaveAudioFormat(const pWaveFormat: PWaveFormatEx): String;</b><br>
          Returns the string representation of a wave audio format.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetWaveAudioLength(const pWaveFormat: PWaveFormatEx; DataSize: DWORD): DWORD;</b><br>
          Returns the wave's length in milliseconds.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetWaveAudioBitRate(const pWaveFormat: PWaveFormatEx): DWORD;</b><br>
          Returns the wave's bit rate in kbps (kilo bits per socond).</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="GetWaveAudioPeakLevel"></a>function GetWaveAudioPeakLevel(const Data: Pointer; DataSize: DWORD; const pWaveFormat: PWaveFormatEx): Integer;</b><br>
          Returns the volume peak level in percent for the specified wave data (PCM format only). If the function fails, it returns -1.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a name="InvertWaveAudio"></a>function InvertWaveAudio(const Data: Pointer; DataSize: DWORD; const pWaveFormat: PWaveFormatEx): Boolean;</b><br>
          Reverses the direction of the wave audio (PCM format only).</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="SilenceWaveAudio"></a><b>function SilenceWaveAudio(const Data: Pointer; DataSize: DWORD; const pWaveFormat: PWaveFormatEx): Boolean;</b><br>
          Fills the specified buffer with the silence data (PCM format only).</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function ChangeWaveAudioVolume(const Data: Pointer; DataSize: DWORD; const pWaveFormat: PWaveFormatEx; Percent: Integer): Boolean;</b><br>
          Increases or decreases the wave data volume by the specified percentage (PCM format only).</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ConvertWaveFormat"></a>function ConvertWaveFormat(const srcFormat: PWaveFormatEx; srcData: Pointer; srcDataSize: DWORD; const dstFormat: PWaveFormatEx; out dstData: Pointer; out dstDataSize: DWORD): Boolean;<br>
          </b>Converts the format of a waveform audio. If the function succeeds and returns True, it is the caller's responsiblity to release the memory allocated for the output wave data buffer by <strong>ReallocMem</strong> procedure. <br>
          For more information, please read <a HREF="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_multistep_format_conversion.asp">Multistep Format Conversion</a> on MSDN. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SetPCMAudioFormat(const pWaveFormat: PWaveFormatEx; Channels: <a HREF="#TPCMChannel">TPCMChannel</a>; SamplesPerSec: <a HREF="#TPCMSamplesPerSec">TPCMSamplesPerSec</a>; BitsPerSample: <a HREF="#TPCMBitsPerSample">TPCMBitsPerSample</a>);<br>
          </b>Initializes a standard PCM wave format header. The size of memory referenced by the pWaveFormat parameter must not be less than the size of TWaveFormatEx record.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SetPCMAudioFormatS(const pWaveFormat: PWaveFormatEx; PCMFormat: <a HREF="#TPCMFormat">TPCMFormat</a>);</b><br>
          Initializes a standard PCM wave format header (shorcut form). The size of memory referenced by the pWaveFormat parameter must not be less than the size of TWaveFormatEx record.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function GetPCMAudioFormat(const pWaveFormat: PWaveFormatEx): <a HREF="#TPCMFormat">TPCMFormat</a>;</b><br>
          Returns the standard PCM format specifier of a wave format.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>function GetWaveDataPositionOffset(const pWaveFormat: PWaveFormatEx; Position: DWORD): DWORD;</strong><br>
            Returns the byte offset (zero base) of the wave audio specified by the pWaveFormat parameter at the position specified by the Position parameter in milliseconds.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function MS2Str(Milliseconds: DWORD; Fmt: <a HREF="#TMS2StrFormat">TMS2StrFormat</a>): String;</b><br>
            Converts milliseconds to string.</font></p>
        </td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function mmioStreamProc(lpmmIOInfo: PMMIOInfo; uMsg, lParam1, lParam2: DWORD): LRESULT; stdcall;</b><br>
          User defined mmIOProc to handle Delphi;s streams by Windows' mmIO API functions.<br>
          <br>
          To open a stream using mmIO API functions, use the following code as sample:<br>
          <br>
          <font COLOR="#006600">FillChar(mmioInfo, SizeOf(mmioInfo), 0);<br>
          mmioInfo.pIOProc := @mmioStreamProc;<br>
          mmioInfo.adwInfo[0] := DWORD(<font COLOR="#990000">your_stream_instance</font>);<br>
          mmIO := mmioOpen(nil, @mmioInfo, dwOpenFlags);</font><font COLOR="#006633"><br>
          </font><br>
          The flags specified by the dwOpenFlags parameter of mmioOpen function can be only one of MMIO_READ, MMIO_WRITE, and MMIO_READWRITE flags. If you use another flags, they will be ignored by this user defined function.</font></td>
      </tr>
    </table>
  </li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="HISTORY"></a><br>
  <font SIZE="4">HISTORY</font></b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
  </b></font> </p>
<ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.85 (November 9, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">Fixed bug in storing audio in <a href="#TAudioRedirector">TAudioRedirector</a>.<br>
    - Fixed some compatibility issues with BCB.
    </font></font><font FACE="Verdana, Arial, Helvetica, sans-serif"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    <br>
  </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.84 (May 22, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">Fixed bug regarding convesion of milliseconds to byte offset of wave data. </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
  <br>
  </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.83 (May 21, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">Added <a href="#TWaveConverter">TWaveConverter</a> </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">and <a href="#TWaveFile">TWaveFileConverter</a> classes. <br>
  - Fixed the bug in setting position property of <a href="#TStockAudioPlayer">TStockAudioPlayer</a>. <br>
  <br>
    </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.82 (May 17, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">Added <a href="#TWaveStreamConverter">TWaveStreamConverter</a> </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">and <a href="#TWaveFile">TWaveFile</a> classes. <br>
    - Some minor tweaks. <br>
    <br>
  </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.81 (May 3, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">Fixed the compatilibity </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">issue with Delphi 3. <br>
    <br>
    </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.80 (March 17, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- Added <a href="#TWaveStreamAdapter">TWaveStreamAdapter</a> class. Using this class any wave audio stream can be manipulated easily. As of now, <a href="#TWave">TWave</a> class is a descendent of </font><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a href="#TWaveStreamAdapter">TWaveStreamAdapter</a> </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">class. <br>
    - Added <a href="#TAudioRedirectorStream">Stream</a> property to <a href="#TAudioRedirector">TAudioRedirector</a> component. Use this property to record audio while redirecting it. <br>
    - Fixed a bug while selecting the recording source in <a href="#TAudioMixerLine">TAudioMixerLine</a> class (Thanks to <a href="mailto:zbacsko@freemail.hu">Falco</a>). <br>
    - Changed prototype of <a href="#GetWaveAudioPeakLevel">GetWaveAudioPeakLevel</a>, <a href="#InvertWaveAudio">InvertWaveAudio</a>, and <a href="#SilenceWaveAudio">SilenceWaveAudio</a> functions. <br>
    <br>
    </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.70 (February 4, 2007)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- Added <a href="#BeginRewrite">BeginRewrite</a> and <a href="#EndRewrite">EndRewrite</a> methods to <a href="#TWave">TWave</a> class. These methods enables you to easily create a wave audio. <br>
    - Added <a href="#VolumeLeft">VolumeLeft</a> and <a href="#VolumeRight">VolumeRight</a> properties to the wave player components. <br>
    <b> </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- Fixed bug in reporting audio position of <font FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TAudioPlayer">TAudioPlayer</a> and <a HREF="#TStockAudioPlayer">TStockAudioPlayer</a> components</font></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">. In addition, as of this release, the position propertey of these components can be set even when they are not activated yet. <b><br>
    </b>- Fixed racing problem in asynchronous mode (Thanks to <a href="http://forum.delphiarea.com/profile.php?mode=email&u=802">Paw</a>)<b> <br>
    </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.63 (March 14, 2006)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Fixed a bug in validating devce ID (Thanks to <a HREF="mailto:edwin@freeradionetwork.nl">Edwin</a>). <b><br>
    <br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.62 (November 7, 2005)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Added <a HREF="#BreakLoop">BreakLoop</a> method to <a HREF="#TLiveAudioPlayer">TLiveAudioPlayer</a>. <b><br>
    <br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.61 (October 10, 2005)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- The Position property of <a HREF="#TAudioPlayer">TAudioPlayer</a> and <a HREF="#TStockAudioPlayer">TStockAudioPlayer</a> components chenged from read-only to read/write. <b><br>
    <br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.60.3 (September 21, 2005)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Adapted to support Delphi 2005. <b><br>
    <br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.60.2 (February 21, 2005)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Delphi 3.0 compatibility issue fixed. <b><br>
    <br>
    </b></font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.60.1 (November 25, 2004)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- A minor bug in <a HREF="#TWaveAudioOut">TWaveAudioOut</a> class fixed.</font><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    <br>
    </font></b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">Version 1.60 (September 23, 2004)<br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- The new <i>Async</i> property added to the interface of <a HREF="#WaveAudioPlayerRecorderClasses">players</a>, <a HREF="#WaveAudioPlayerRecorderClasses">recorders</a>, and <a HREF="#WaveAudioPlayerRecorderClasses">redirector</a> components. When this property is True, the events occur in a separate thread, so the event handlers should be thread-safe.</font><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font></b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif">- The new <a HREF="#WaitForStart">WaitForStart</a> method added to the interface of <a HREF="#TWaveAudioIO">TWaveAudioIO</a> component.<br>
    </font><b><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font></b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 1.53 (August 9, 2004)<br>
    </font></b><font SIZE="2">- <a HREF="#CalcWaveBufferSize">CalcWaveBufferSize</a> and <a HREF="#SilenceWaveAudio">SilenceWaveAudio</a></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> added to the list of global procedures.<br>
    - Some minor tweaks<br>
    - A TCP Client/Server set of applications included in the package to show how to use <a HREF="#TLiveAudioPlayer">TLiveAudioPlayer</a> and <a HREF="#TLiveAudioRecorder">TLiveAudioRecorder</a> components. The programs use Delphi's TServerSocket and TClientSocket for TCP connection.<br>
    </font></font><br>
  </li>
  <li><font size="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Version 1.52.1 (January 19, 2004)</b></font><br>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- Some minor tweaks</font><br>
    <br>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 1.52 (January 15, 2004)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- A minor bug in wave manipulation methods of <a HREF="#TWave">TWave</a> class fixed.</font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    <br>
    </font></b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> Version 1.51 (December 8, 2003)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- The <a HREF="#ConvertWaveFormat">ConvertWaveFormat</a> procedure fully implemented.</font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    <br>
    </font></b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2">Version 1.50 (December 7, 2003)<br>
    </font></b><font SIZE="2">- New component <a HREF="#TAudioMixer">TAudioMixer</a> added to the package.</font><b><font SIZE="2"><br>
    </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Some new propeties and methods added to the <a HREF="#TWave">TWave</a> class.<br>
    - New <a HREF="#TWaveAudioLevelEvent">OnLevel</a> event added to all audio playback and recording components.<br>
    - New <a HREF="#OnFilter">OnFilter</a> event added to the <a HREF="#AudioOut">TAudioRedirector.AudioOut</a> sub component property.<br>
    </font><font SIZE="2">- Some new </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#GlobalProcedures">Global Procedures</a> added.<br>
    </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
    </font></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2">Version 1.02 (August 10, 2003)<br>
    </font></b><font SIZE="2">- </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Bug fix: On Delphi 3 the definition of TPCMWaveFormat is wrong, and because of that some components could not reterive the wave format of the wave to playback. <br>
    </font><b><br>
    </b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><font SIZE="2">Version 1.01 (August 10, 2003)<br>
    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </font><font SIZE="2">The package's documentation (</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">this file) updated</font><font SIZE="2">.</font><b><br>
    <br>
    </b></font></li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif"><b> <font SIZE="2">Version 1.0. (July 19, 2003)</font></b><font SIZE="2"><br>
    - Initial release to public domain.</font></font> </li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="4"><b><a NAME="ACKNOWLEDGMENT"></a><br>
  ACKNOWLEDGMENT</b></font></p>
<blockquote>
  <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Special thanks to:</font> </p>
  <ul>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Inprise for his help on wave format conversion.</font></li>
    <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Edwin Arts &lt;<a HREF="mailto:edwin@freeradionetwork.nl">edwin@freeradionetwork.nl</a>&gt; for providing mixer control demo and fixing a bug.</font></li>
    <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="http://forum.delphiarea.com/profile.php?mode=email&u=802">Paw</a> for fixing a racing problem.</font> </li>
    <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Falco &lt;<a href="mailto:zbacsko@freemail.hu">zbacsko@freemail.hu</a>&gt; for fixing the line selection problem of Audio Mixer.</font> <br>
    </li>
  </ul>
</blockquote>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="LICENSE"></a><br>
  <font SIZE="4">LICENSE</font></b></font></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio Package is freeware. You may copy package's files AS LONG AS YOU COPY ALL OF THEM. If you want to change the source code in order to improve the components' features, performance, etc. please send me the new source code so that I can have a look at it. The changed source code should contain descriptions what you have changed, and of course your name. The only thing you MAY NOT CHANGE is the ORIGINAL COPYRIGHT INFORMATION. </font>
<p></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="DISCLAIMER"></a><br>
  </b> <b> <font SIZE="4">DISCLAIMER</font></b></font></p>
<p> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio Package is provided &quot;AS IS&quot; without any warranty of any kind, either express or implied. The entire risk as to the quality and performance of the software is with you. The author is NOT liable for any DAMAGES resulting from the use and misuse of the package, especially he is NOT liable for DAMAGES that were caused BY ANY VERSION WHICH HAS NOT BEEN PROGRAMMED BY THE AUTHOR HIMSELF.</font></p>
<font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
</font>
<table WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
  <tr>
    <td WIDTH="100%">
      <hr NOSHADE>
    </td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="1"><sup>&nbsp;END OF DOCUMENT</sup></font></td>
  </tr>
</table>
</body>
</html>
